plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.dagger.hilt.android'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.example.book_tracker'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.book_tracker"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "0.0.0.1 pre-beta"

        testInstrumentationRunner "com.example.book_tracker.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())


        buildConfigField "String", "GCP_ID", "\"${properties.getProperty("GCP_ID")}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {

            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            exclude 'META-INF/LICENSE.md'
            exclude 'META-INF/LICENSE-notice.md'
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0'
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    def compose_ui_version = "1.3.3"
    def work_version = "2.8.0"

    //Timber Logger
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //Process Phoenix facilitates restarting your application process.
    implementation 'com.jakewharton:process-phoenix:2.1.2'

    // DataStore Preferences
//    implementation' androidx.datastore:datastore-preferences:1.0.0'
    implementation 'androidx.datastore:datastore:1.1.0-alpha01'
    implementation 'androidx.datastore:datastore-preferences:1.1.0-alpha01'

    // WorkManager dependency
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // Splash screen API
    implementation 'androidx.core:core-splashscreen:1.0.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.1.0')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.android.gms:play-services-auth:20.4.1'

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //ML Kit Barcode scanning
    // Use this dependency to bundle the model with your app
//    implementation 'com.google.mlkit:barcode-scanning:17.0.3'
//     Use this dependency to use the dynamically downloaded model in Google Play Services
//    implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:18.1.0'


//    def camerax_version = "1.3.0-alpha02"
//    implementation "androidx.camera:camera-core:${camerax_version}"
//    implementation "androidx.camera:camera-camera2:${camerax_version}"
//    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
//    implementation "androidx.camera:camera-video:${camerax_version}"
//    implementation "androidx.camera:camera-view:${camerax_version}"
//    implementation "androidx.camera:camera-extensions:${camerax_version}"

    //Dagger - Hilt
    implementation 'com.google.dagger:hilt-android:2.45'
    implementation 'androidx.compose.material:material:1.3.1'
    kapt 'com.google.dagger:hilt-compiler:2.45'

    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.0'

    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    // Navigation Component
    implementation "androidx.navigation:navigation-compose:2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.3"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4"

    // Coroutine Lifecycle Scopes
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.0"

    // Coil
    implementation "io.coil-kt:coil-compose:2.2.0"

    def accompanistPermissionsVersion = '0.28.0'
    implementation "com.google.accompanist:accompanist-permissions:$accompanistPermissionsVersion"


    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:5.0.0-alpha.2"

    // JSON Converter
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.3.1'
    implementation 'androidx.compose.runtime:runtime-livedata:1.4.0-beta02'

    // Paging 3
    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha18"


    // Unit test implementation
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.5.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'com.google.dagger:hilt-android-testing:2.45'
    kaptTest 'com.google.dagger:hilt-compiler:2.45'

    // Insturmentation tests
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'com.google.truth:truth:1.1.3'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.45'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.45'
    androidTestImplementation 'io.mockk:mockk-android:1.13.4'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.test:core-ktx:1.5.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.5.1'


    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"


}